<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Bles</title>
    <link href="https://fonts.googleapis.com/css?family=Poppins:300,900&display=swap" rel="stylesheet" />
    <style>
        .page-container {
            display: flex;
            color: inherit;
            font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji;
        }

        .left-section {
            flex-basis: 15%;
            background-color: #f1f1f1;
            padding: 20px;
        }

        .step-circles {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-between;
            width: 100px;
            height: 400px;
            background-color: #f5f5f5;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .step-circle {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: #e0e0e0;
            font-weight: bold;
            color: #444;
        }

        .step-circle.active {
            background-color: black;
            color: white;
        }

        .step-circle.active span {
            display: none;
        }

        .line {
            width: 4px;
            flex: 1;
            background-color: #e0e0e0;
        }

        .step-circle.active::after {
            content: "\2713";
            font-size: 24px;
        }

        .right-section {
            flex-basis: 85%;
            overflow-y: scroll;
            background-image: ("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23cbcbcb' fill-opacity='0.21'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");

        }

        .right-section-part {
            display: none;
            padding-left: 20px;
        }

        .right-section-part.active {
            display: block;
        }

        .right-section-part button.show-indicator::after {
            content: "";
            margin-left: 5px;
            display: inline-block;
            width: 8px;
            height: 8px;
            background-color: red;
            border-radius: 50%;
        }

        .right-section-part #chatbotTypes {
            display: none;
            margin-top: 10px;
            padding-left: 20px;
            border-left: 2px solid red;
        }

        .right-section-part nav {
            display: flex;
        }

        nav {
            display: flex;
            align-items: center;
        }

        nav p {
            margin-right: auto;
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }

        nav button {
            background-color: #fff;
            border: 2px solid black;
            color: #333;
            font-size: 14px;
            font-weight: bold;
            padding: 10px 15px;
            margin-left: 10px;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        nav button.continue-button {
            background-color: black;
            color: #fff;
        }

        nav button:hover {
            background-color: #333;
            color: #fff;
        }

        .step2 {
            flex-basis: 50%;
        }

        .step2-container {
            display: flex;
            flex-wrap: wrap;
        }

        .step2-container.active {
            display: block;
        }

        .glass-effect {
            background-color: rgba(255, 255, 255, 0.7);
            padding: 10px;
            margin-left: 5px;
            margin-bottom: 5px;
            border-radius: 4px;
            box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
            font-family: "Arial", sans-serif;
            max-width: 95%;
        }

        .glass-effect-hide {
            background-color: rgba(255, 255, 255, 0.7);
            padding: 10px;
            margin-left: 5px;
            margin-bottom: 5px;
            border-radius: 4px;
            box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
            font-family: "Arial", sans-serif;
            max-width: 95%;
        }

        .inpt[type="email"],
        .inpt[type="text"] {
            border: 0.5px solid rgb(185, 183, 183);
            width: 98%;
            height: 25px;
            margin-bottom: 20px;
            border-radius: 4px;
            padding: 5px;
            transition: border-color 0.3s ease;
            color: rgb(185, 183, 183);
        }

        .inpt[type="email"].bb-bt,
        .inpt[type="text"].bb-bt {
            border: 0.5px solid rgb(58, 58, 58);
            color: #000000;
            height: 50px;
        }

        .inpt[type="email"]:focus,
        .inpt[type="text"]:focus {
            border-color: rgb(117, 169, 248);
        }

        .box {
            flex: 1 1 100%;
            position: relative;
            height: fit-content;
            font-family: "Arial", sans-serif;
            background-color: transparent;
            transition: background-color 0.3s ease;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .button {
            text-align: left;
            position: relative;
            background-color: #fff;
            border: none;
            width: 100%;
            height: 40px;
            font-size: 14px;
            cursor: pointer;
            z-index: 1;
        }

        .button::before {
            content: "\f077";
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
            display: inline-block;
            margin-right: 10px;
            transform: rotate(180deg);
            transition: transform 0.3s ease;
            position: absolute;
            right: 10px;
            top: 50%;

        }

        .button.rotate::before {
            transform: rotate(0deg);
        }

        .content {
            display: none;
            margin-top: 10px;
        }

        .box.open .content {
            display: block;
        }

        .box.open {
            background-color: rgba(255, 255, 255, 0.9);
            box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
        }

        .header {
            margin-bottom: 10px;
        }

        .header h2 {
            font-weight: bold;
        }

        .buttons {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            background-color: gray;
            border-radius: 5px;
            overflow: hidden;
        }

        .buttons button {
            width: 50%;
            padding: 10px;
            margin: 2px;
            border: none;
            color: white;
            font-weight: bold;
            background-color: transparent;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .buttons button:hover {
            background-color: white;
            color: gray;
        }

        .detail {
            display: none;
            margin-top: 20px;
            background-color: rgba(255, 255, 255, 0.7);
            padding: 10px;
            margin-left: 5px;
            margin-bottom: 5px;
            border-radius: 4px;
            box-shadow: 0 0 8px rgba(0, 0, 0, 0.2);
            font-family: "Arial", sans-serif;
            max-width: 95%;
        }

        .detail.open {
            display: block;
        }

        .avatar-box {
            width: 300px;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .title {
            font-weight: bold;
        }

        .subtitle {
            font-weight: lighter;
            margin-bottom: 10px;
        }

        .avatar-wrapper {
            position: relative;
            margin-bottom: 20px;
            display: flex;
        }

        .avatar-circle {
            position: relative;
            width: 150px;
            height: 150px;
            margin: 0 auto;
            background-color: gray;
            border-radius: 50%;
            display: flex;
            margin-left: 0;
            overflow: hidden;
        }

        .avatar-preview {
            width: 100%;
            height: 100%;
            background-size: cover;
            background-position: center;
        }

        .icon-preview {
            width: 100%;
            height: 100%;
            background-size: cover;
            background-position: center;
        }

        .upload-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            background-color: rgba(0, 0, 0, 0.5);
            color: #fff;
            opacity: 0;
            transition: opacity 0.3s ease;
            cursor: pointer;
        }

        .avatar-circle:hover .upload-overlay {
            opacity: 1;
        }

        .upload-text {
            font-weight: lighter;
        }

        .avatar-buttons {
            justify-content: center;
        }

        .upload-button,
        .reset-button {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .upload-button {
            background-color: #000;
            color: #fff;
            margin-right: 10px;
        }

        .reset-button {
            background-color: gray;
            color: #fff;
        }

        button:focus {
            outline: none;
        }

        .color-palette {
            display: flex;
            align-items: center;
            margin-top: 10px;
            margin-right: 200px;
        }

        .icon-circle {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background-color: gray;
            margin-right: 10px;
            border: 2px solid #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            background-size: cover;
            background-position: center;
        }

        .chat-icon {
            color: #fff;
            font-size: 16px;
        }

        button:focus {
            outline: none;
        }

        .toggle-button {
            width: 40px;
            height: 20px;
            background-color: gray;
            border-radius: 10px;
            position: relative;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .toggle-button::after {
            content: "";
            display: block;
            position: absolute;
            top: 2px;
            left: 2px;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            background-color: #fff;
            transition: transform 0.3s ease;
        }

        .toggle-button.on {
            background-color: rgb(63, 166, 207);
        }

        .toggle-button.on::after {
            transform: translateX(20px);
        }

        .input-container {
            display: flex;
            align-items: flex-end;
            margin-left: 20px;
        }

        .label {
            margin-right: 5px;
            font-weight: lighter;
            text-align: center;
            display: grid;
        }

        .label-hide {
            margin-right: 5px;
            font-weight: lighter;
            text-align: center;
            display: grid;
        }

        .flex-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .hidden {
            display: none;
        }
    </style>
</head>

<body>
    <div class="page-container">
        <div class="left-section">
            <h2>Steps:</h2>
            <div class="step-circles" id="stepList">
                <div class="step-circle active" onclick="goToStep(1)">
                    <span>1</span>
                </div>
                <div class="line"></div>
                <div class="step-circle" onclick="goToStep(2)"><span>2</span></div>
                <div class="line"></div>
                <div class="step-circle" onclick="goToStep(3)"><span>3</span></div>
            </div>
        </div>
        <div class="right-section">
            <div class="right-section-part active" id="step1">
                <h2>Step 1: Create your first document</h2>
                <button onclick="nextStep()">Confirm</button>
            </div>
            <div class="right-section-part" id="step2">
                <nav>
                    <p>chatbot</p>
                    <button class="share-button">share</button>
                    <button class="continue-button">continue</button>
                </nav>

                <div class="step2-container">
                    <div class="step2">
                        <div>
                            <span>Name</span><br>
                            <input class="inpt" type="text" id="nameInput" />
                        </div>

                        <div class="box" id="chatbot-type">
                            <button class="button" onclick="toggleContent('chatbot-type')">Chatbot Type</button>
                            <div class="content">
                                <div class="glass-effect">
                                    <div class="title">Chatbot Type</div>
                                    <div class="subtitle">Select type</div>
                                    <div class="buttons">
                                        <button onclick="showDetail('chatbot')">Chatbot</button>
                                        <button onclick="showDetail('ai-agent')">AI Agent</button>
                                    </div>
                                    <div class="detail" id="chatbot-detail">
                                        <h3>Chatbot Detail</h3>
                                        <p>Best for customer service, sales, and marketing use cases. Chatbots can be
                                            trained to answer questions and provide recommendations.</p>
                                    </div>
                                    <div class="detail" id="ai-agent-detail">
                                        <h3>AI Agent Detail</h3>
                                        <p>Can perform various tasks based on tools you connect. For example, you can
                                            create an AI agent that can create a Jira ticket, or create a pull request
                                            in GitHub. View existing tools.</p>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="box" id="chatbot-ui">
                            <button class="button" onclick="toggleContent('chatbot-ui')">Chatbot UI</button>
                            <div class="content">
                                <div class="glass-effect">
                                    <div class="title">Brand Image</div>
                                    <div class="subtitle">Chatbot Avatar</div>
                                    <div class="avatar-wrapper">
                                        <div class="avatar-circle">
                                            <div class="avatar-preview"></div>
                                            <div class="upload-overlay">
                                                <span class="upload-text">Upload Avatar</span>
                                                <input type="file" id="image-upload" accept="image/*"
                                                    onchange="handleImageUpload(event)">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="avatar-buttons">
                                        <button class="upload-button"
                                            onclick="document.getElementById('image-upload').click()">Upload
                                            Image</button>
                                        <button class="reset-button" onclick="resetAvatar()">Reset</button>
                                    </div>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Chat icon color</div>
                                    <div class="subtitle">Pick color to fit your site theme</div>
                                    <div class="avatar-wrapper">
                                        <div class="avatar-circle">
                                            <div class="icon-preview"></div>
                                            <div class="upload-overlay">
                                                <span class="upload-text">Upload icon image</span>
                                                <input type="file" id="icon-upload" accept="image/*"
                                                    onchange="handleIconUpload(event)">
                                            </div>
                                        </div>
                                        <div class="color-palette">
                                            <input type="color" id="color-picker" onchange="changeAvatarColor(event)">
                                            <div class="icon-circle"></div>
                                            <div class="chat-icon">
                                                <i class="fas fa-comment"></i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="avatar-buttons">
                                        <button class="upload-button"
                                            onclick="document.getElementById('icon-upload').click()">Upload
                                            Image</button>
                                        <button class="reset-button" onclick="resetIcon()">Reset</button>
                                    </div>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Header</div>
                                    <div class="subtitle">Chatbot header text</div>
                                    <input class="inpt" type="text" id="chatbot-header" />
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Subheader</div>
                                    <div class="subtitle">Chatbot header text</div>
                                    <input class="inpt" type="text" id="chatbot-subheader" />
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Chatbot window size</div>
                                    <div class="subtitle">Set chatbot widget size</div>
                                    <div style="display: flex;margin-bottom: 15px;margin-left: 25px;">
                                        <div class="toggle-button on"></div>
                                        <div class="label" style="font-weight: 100;">‌ Allow expand</div>
                                    </div>
                                    <div class="input-container">
                                        <div class="label">Default width
                                            <input type="number" class="glass-effect" value="360" style="width: 100px;">
                                        </div>
                                        <select class="glass-effect" style="width: 100px;">
                                            <option value="px">px</option>
                                            <option value="vm">vm</option>
                                            <option value="%">%</option>
                                        </select>
                                        <div class="label-hide">Expand width
                                            <input type="number" class="glass-effect-hide" value="360"
                                                style="width: 100px;">
                                        </div>
                                        <select class="glass-effect-hide" style="width: 100px;">
                                            <option value="px">px</option>
                                            <option value="vm">vm</option>
                                            <option value="%">%</option>
                                        </select>
                                    </div>
                                    <div class="input-container">
                                        <div class="label">Default height
                                            <input type="number" class="glass-effect" value="640" style="width: 100px;">
                                        </div>
                                        <select class="glass-effect" style="width: 100px;">
                                            <option value="px">px</option>
                                            <option value="vm">vm</option>
                                            <option value="%">%</option>
                                        </select>
                                        <div class="label-hide">Expand height
                                            <input type="number" class="glass-effect-hide" value="640"
                                                style="width: 100px;">
                                        </div>
                                        <select class="glass-effect-hide" style="width: 100px;">
                                            <option value="px">px</option>
                                            <option value="vm">vm</option>
                                            <option value="%">%</option>
                                        </select>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="box" id="notification">
                            <button class="button" onclick="toggleContent('notification')">Notifications</button>
                            <div class="content">
                                <div class="glass-effect">
                                    <div class="title">Notification email</div>
                                    <div class="subtitle">Live agent requests and chat transcripts will be sent to this
                                        email</div>
                                    <input type="email" class="inpt" placeholder="support@example.com">
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Live agent requests</div>
                                    <div class="subtitle">Send notification to your Email when client requests Live
                                        Agent</div>
                                    <div class="toggle-button"></div>
                                    <div class="subtitle">Scenarios when live agent should be notified</div>
                                    <input type="text" class="inpt bb-bt" id="live-agent-req">
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Receive chat transcripts</div>
                                    <div class="flex-container">
                                        <div class="subtitle">Send chat transcripts to your notification email once they
                                            are finished</div>
                                        <div class="toggle-button on"></div>
                                    </div>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Include Summary</div>
                                    <div class="flex-container">
                                        <div class="subtitle">Add short summary of the conversation to the transcript
                                        </div>
                                        <div class="toggle-button on"></div>
                                    </div>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Include Unresolved Requests</div>
                                    <div class="flex-container">
                                        <div class="subtitle">Add Unresolved requests to the transcript</div>
                                        <div class="toggle-button on"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box" id="Interactions">
                            <button class="button" onclick="toggleContent('Interactions')">Interactions</button>
                            <div class="content">
                                <div class="glass-effect">
                                    <div class="title">Require name and email before chat</div>
                                    <div class="subtitle">Always ask for name and email before chat</div>
                                    <div class="toggle-button"></div>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Collect feedback</div>
                                    <div class="subtitle">Ask for feedback after chat is finished</div>
                                    <div class="toggle-button on"></div>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Welcome message(s)</div>
                                    <div class="subtitle">Messages that client will see when first opening chat</div>
                                    <textarea placeholder="Shift + Enter for new line
Hi there!👋
I'm here if you have any questions🙂" name="welcomeMessages" id="welcomeMessages" class="inpt bb-bt"
                                        style="height: 50px; width: 98%;"></textarea>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Popup message(s)</div>
                                    <div class="subtitle">Messages that appear on top of chat icon</div>
                                    <textarea placeholder="Shift + Enter for new line
Hi there!👋
Want chatbot like that?" name="popupMessages" id="popupMessages" class="inpt bb-bt"
                                        style="height: 50px; width: 98%;"></textarea>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Predefined questions</div>
                                    <div class="subtitle">Conversation starters that client can choose from</div>
                                    <textarea placeholder="Shift + Enter for new line
Tell me about your pricing plans?👋
How can I create chatbot??" name="conversationStarters" id="conversationStarters" class="inpt bb-bt"
                                        style="height: 50px; width: 98%;"></textarea>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Fallback message</div>
                                    <div class="subtitle">Messages that Chatbot can respond with when it can't provide
                                        an answer.<br />Eg. contact information</div>
                                    <textarea placeholder="Feel free to reach out to us at contact@company.com"
                                        name="fallbackResponse" id="fallbackResponse" class="inpt bb-bt"
                                        style="height: 50px; width: 98%;">Sorry I don't know</textarea>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Live agent acknowledge message</div>
                                    <div class="subtitle">Messages of confirmation that Live Agent was requested</div>
                                    <textarea
                                        placeholder="Please wait, live agent will join shortly. Meanwhile can you please leave your email so we can reach out to you in case we miss you"
                                        name="liveAgentAcknowledgeMessage" id="liveAgentAcknowledgeMessage"
                                        class="inpt bb-bt"
                                        style="height: 50px; width: 98%;">Please wait, live agent will join shortly. Meanwhile can you please leave your email so we can reach out to you in case we miss you</textarea>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Live agent message</div>
                                    <div class="subtitle">Message that client will receive while waiting for Live Agent
                                    </div>
                                    <textarea placeholder="Live agent was notified and will join as soon as possible"
                                        name="liveAgentWaitMessage" id="liveAgentWaitMessage"
                                        class="Interactions___StyledTextarea6-sc-6siynf-10 kpJFfg"
                                        style="height: 50px; width: 98%;">Live agent was notified and will join as soon as possible</textarea>
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Live agent left conversation message</div>
                                    <div class="subtitle">Message that client will receive from bot when Live Agent
                                        leaves the chat</div>
                                    <textarea
                                        placeholder="I hope your issue was resolved! I'm here if you still need any help."
                                        name="liveAgentLeftMessage" id="liveAgentLeftMessage"
                                        class="Interactions___StyledTextarea7-sc-6siynf-11 koMqvw"
                                        style="height: 50px; width: 98%;">I hope your issue was resolved! I'm here if you still need any help.</textarea>
                                </div>
                            </div>
                        </div>
                        <div class="box" id="brand">
                            <button class="button" onclick="toggleContent('brand')">Brand</button>
                            <div class="content">
                                <div class="glass-effect">
                                    <div class="title">Company name</div>
                                    <div class="subtitle">This is used to identify which company/business this chatbot
                                        works for.<br />Defaults to main organization name</div>
                                    <input type="text" class="inpt" id="company-name" placeholder="My Company">
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Business website</div>
                                    <div class="subtitle">Company website if different from main organization website.
                                    </div>
                                    <input type="text" class="inpt" id="business-website"
                                        placeholder="http://www.example.com">
                                </div>
                            </div>
                        </div>
                        <div class="box" id="persona">
                            <button class="button" onclick="toggleContent('persona')">Persona</button>
                            <div class="content">
                                <div class="glass-effect">
                                    <div class="title">Name</div>
                                    <div class="subtitle">This name will be displayed in the chat</div>
                                    <input class="inpt" type="text" id="persona-name">
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Personality prompt</div>
                                    <div class="subtitle">Define chatbot personality to better align with your company
                                        brand and needs. Only define personality and not the actual responses.</div>
                                    <textarea class="inpt" id="customPrompt"
                                        placeholder="You are friendly Customer Support rep named Alice. You are friendly and can speak English and Spanish."
                                        name="customPrompt" maxlength="1024" rows="3" aria-invalid="false"
                                        style="height: 50px; width: 98%;"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="box" id="ai-tuning">
                            <button class="button" onclick="toggleContent('ai-tuning')">AI Tuning</button>
                            <div class="content">
                                <div class="glass-effect">
                                    <div class="title">Temperature</div>
                                    <div class="subtitle">Controls randomness: Lowering results in less random completions. As the temperature approaches zero, the model will become deterministic and repetitive. Higher temperature results in more random completions.</div>
                                    
                                </div>
                                <div class="glass-effect">
                                    <div class="title">Response style</div>
                                    <div class="subtitle">Traditional whole message at once or ChatGPT style stream of messages</div>
                                    <div class="buttons">
                                        <button onclick="showPreview('chatstyle')">Chat style</button>
                                        <button onclick="showPreview('chatgptstyle')">ChatGPT style</button>
                                    </div>
                                    <div class="preview" id="chatstyle-preview">
                                      
                                    </div>
                                    <div class="detail" id="chatgptstyle-preview">
                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="box" id="docs">
                            <button class="button" onclick="toggleContent('docs')">Documents</button>
                            <div class="content">
                                <p>This is the content for box 3.</p>
                            </div>
                        </div>
                        <div class="box" id="data-source">
                            <button class="button" onclick="toggleContent('data-source')">Data sources</button>
                            <div class="content">
                                <p>This is the content for box 3.</p>
                            </div>
                        </div>


                        <button onclick="nextStep()">Confirm</button>
                        <button onclick="previousStep()">Previous</button>
                    </div>
                    <div class="step2" id="chatbot">
                        <h2>Chatbot Area</h2>
                    </div>
                    <div class="step2" id="ai-agent">
                        <h2>AI agent Area</h2>
                    </div>
                </div>

            </div>
            <div class="right-section-part" id="step3">
                <h2>Step 3: Integrate and deploy your chatbot</h2>
                <button onclick="nextStep()">Confirm</button>
                <button onclick="previousStep()">Previous</button>
            </div>
        </div>


    </div>

    <script>
        let currentStep = 1;
        const stepCircles = document.querySelectorAll('.step-circle');
        const stepList = document.getElementById('stepList');
        var prebox;

        document.getElementById("chatbot-header").value = "AI Assistant";
        document.getElementById("chatbot-subheader").value = "Ask me anything";
        document.getElementById("live-agent-req").value = "wants to talk to a human";
        document.getElementById("persona-name").value = "Bot";
        function toggleContent(boxId) {
            var button = document.getElementById(boxId).querySelector('.button');
            button.classList.toggle('rotate');

            var boxes = document.querySelectorAll('.box');
            for (var i = 0; i < boxes.length; i++) {
                var box = boxes[i];
                if (box.id === boxId) {
                    box.classList.toggle('open');
                } else {
                    box.classList.remove('open');
                    if (box.id == prebox) document.getElementById(box.id).querySelector('.button').classList.toggle('rotate');
                }
            }
            prebox = boxId;
        }

        function updateStepList() {
            stepCircles.forEach((circle, index) => {
                if (index < currentStep) {
                    circle.classList.add('active');
                } else {
                    circle.classList.remove('active');
                }
            });
        }

        function goToStep(step) {
            const currentStepElement = document.getElementById(`step${currentStep}`);
            currentStepElement.classList.remove('active');
            currentStep = step;
            const nextStepElement = document.getElementById(`step${currentStep}`);
            nextStepElement.classList.add('active');
            updateStepList();
        }

        function nextStep() {
            const currentStepElement = document.getElementById(`step${currentStep}`);
            currentStepElement.classList.remove('active');
            currentStep++;
            const nextStepElement = document.getElementById(`step${currentStep}`);
            nextStepElement.classList.add('active');

            updateStepList();


        }

        function previousStep() {
            const currentStepElement = document.getElementById(`step${currentStep}`);
            currentStepElement.classList.remove('active');
            currentStep--;
            const previousStepElement = document.getElementById(`step${currentStep}`);
            previousStepElement.classList.add('active');

            updateStepList();

            stepList.classList.remove('check-mark');
        }

        updateStepList();

        function showDetail(detailId) {
            document.getElementById(detailId).classList.add('active');
            var details = document.getElementsByClassName("detail");
            for (var i = 0; i < details.length; i++) {
                details[i].classList.remove("open");
            }

            var detail = document.getElementById(detailId + "-detail");
            detail.classList.add("open");
        }

        function showPreview(detailId) {
            document.getElementById(detailId).classList.add('active');
            var previews = document.getElementsByClassName("preview");
            for (var i = 0; i < previews.length; i++) {
                previews[i].classList.remove("open");
            }

            var preview = document.getElementById(detailId + "-preview");
            preview.classList.add("open");
        }

        function handleImageUpload(event) {
            var file = event.target.files[0];
            var reader = new FileReader();
            var avatarPreview = document.querySelector(".avatar-preview");

            reader.onload = function (e) {
                avatarPreview.style.backgroundImage = `url(${e.target.result})`;
            };

            reader.readAsDataURL(file);
        }

        function handleIconUpload(event) {
            var file = event.target.files[0];
            var reader = new FileReader();
            var avatarPreview = document.querySelector(".icon-preview");
            var colorCircle = document.querySelector(".icon-circle");

            reader.onload = function (e) {
                avatarPreview.style.backgroundImage = `url(${e.target.result})`;
                colorCircle.style.backgroundImage = `url(${e.target.result})`;
            };

            reader.readAsDataURL(file);
        }

        function resetAvatar() {
            var avatarPreview = document.querySelector(".avatar-preview");
            avatarPreview.style.backgroundImage = "";
            document.getElementById("image-upload").value = "";
        }

        function resetIcon() {
            var avatarPreview = document.querySelector(".icon-preview");
            avatarPreview.style.backgroundImage = "";
            document.getElementById("icon-upload").value = "";
            document.getElementById("chat-icon").value = "";
        }

        function changeAvatarColor(event) {
            var color = event.target.value;
            var colorCircle = document.querySelector(".icon-circle");
            colorCircle.style.backgroundColor = color;
        }

        var toggleButton = document.querySelector('.toggle-button');

        toggleButton.addEventListener('click', function () {
            toggleButton.classList.toggle('on');
            var hid = document.getElementsByClassName("glass-effect-hide");
            for (var i = 0; i < hid.length; i++) {
                hid[i].classList.toggle("hidden");
            }
            var hidd = document.getElementsByClassName("label-hide");
            for (var i = 0; i < hidd.length; i++) {
                hidd[i].classList.toggle("hidden");
            }
        });
    </script>

    <script src="https://kit.fontawesome.com/bf8bc74aaf.js" crossorigin="anonymous"></script>
</body>

</html>